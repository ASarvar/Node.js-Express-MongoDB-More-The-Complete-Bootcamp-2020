"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],a=!0,n=!1,s=void 0;try{for(var o,i=e[Symbol.iterator]();!(a=(o=i.next()).done)&&(r.push(o.value),!t||r.length!==t);a=!0);}catch(e){n=!0,s=e}finally{try{a||null==i.return||i.return()}finally{if(n)throw s}}return r}}function _arrayWithHoles(e){if(Array.isArray(e))return e}var Tour=require("./../models/tourModel"),catchAsync=require("./../utils/catchAsync"),factory=require("./handlerFactory"),AppError=require("./../utils/appError"),chalk=require("chalk");exports.aliasTopTours=function(t,e,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:t.query.limit="5",t.query.sort="-ratingsAverage,price",t.query.fields="name,price,ratingsAverage,summary,difficulty",r();case 4:case"end":return e.stop()}})},exports.getAllTours=factory.getAll(Tour),exports.getTour=factory.getOne(Tour,{path:"reviews"}),exports.createTour=factory.createOne(Tour),exports.updateTour=factory.updateOne(Tour),exports.deleteTour=factory.deleteOne(Tour),exports.getTourStats=catchAsync(function(e,t){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Tour.aggregate([{$match:{ratingsAverage:{$gte:4.5}}},{$group:{_id:{$toUpper:"$difficulty"},num:{$sum:1},numRatings:{$sum:"$ratingsQuantity"},avgRating:{$avg:"$ratingsAverage"},avgPrice:{$avg:"$price"},minPrice:{$min:"$price"},maxPrice:{$max:"$price"}}},{$sort:{avgPrice:1}}]));case 2:r=e.sent,t.status(200).json({status:"success",data:{stats:r}});case 4:case"end":return e.stop()}})}),exports.getMonthlyPlan=catchAsync(function(t,r){var a,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return a=1*t.params.year,e.next=3,regeneratorRuntime.awrap(Tour.aggregate([{$unwind:"$startDates"},{$match:{startDates:{$gte:new Date("".concat(a,"-01-01")),$lte:new Date("".concat(a,"-12-31"))}}},{$group:{_id:{$month:"$startDates"},numTourStarts:{$sum:1},tours:{$push:"$name"}}},{$addFields:{month:"$_id"}},{$project:{_id:0}},{$sort:{numTourStarts:-1}}]));case 3:n=e.sent,r.status(200).json({status:"success",data:{plan:n}});case 5:case"end":return e.stop()}})}),exports.getToursWithin=catchAsync(function(t,r,a){var n,s,o,i,c,u,l,p,g,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.params,s=n.distance,o=n.latlng,i=n.unit,c=o.split(","),u=_slicedToArray(c,2),l=u[0],p=u[1],g="mi"===i?s/3963.2:s/6378.1,l&&p||a(new AppError("Please provide a latitude and longitude in the format lat,lng",400)),e.next=6,regeneratorRuntime.awrap(Tour.find({startLocation:{$geoWithin:{$centerSphere:[[p,l],g]}}}));case 6:d=e.sent,r.status(200).json({status:"success",results:d.length,data:{data:d}});case 8:case"end":return e.stop()}})}),exports.getDistances=catchAsync(function(t,r,a){var n,s,o,i,c,u,l,p,g;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.params,s=n.latlng,o=n.unit,i=s.split(","),c=_slicedToArray(i,2),u=c[0],l=c[1],p="mi"===o?.00062137119:.001,u&&l||a(new AppError("Please provide a latitude and longitude in the format lat,lng",400)),e.next=6,regeneratorRuntime.awrap(Tour.aggregate([{$geoNear:{near:{type:"Point",coordinates:[1*l,1*u]},distanceField:"distance",distanceMultiplier:p}},{$project:{distance:1,name:1}}]));case 6:g=e.sent,r.status(200).json({status:"success",data:{data:g}});case 8:case"end":return e.stop()}})});