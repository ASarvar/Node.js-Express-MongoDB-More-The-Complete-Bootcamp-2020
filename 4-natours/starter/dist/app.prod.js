"use strict";var fs=require("fs"),express=require("express"),app=express();app.use(express.json());var tours=JSON.parse(fs.readFileSync("".concat(__dirname,"/dev-data/data/tours-simple.json"))),getAllTours=function(s,t){t.status(200).json({status:"success",results:tours.length,data:{tours:tours}})},getTour=function(s,t){var e=1*s.params.id,a=tours.find(function(s){return s.id===e});if(!a)return t.status(404).json({status:"fail",message:"Invalid ID"});t.status(200).json({status:"success",data:{tour:a}})},createTour=function(s,t){var e=tours[tours.length-1].id+1,a=Object.assign({id:e},s.body);tours.push(a),fs.writeFile("".concat(__dirname,"/dev-data/data/tours-simple.json"),JSON.stringify(tours),function(s){t.status(201).json({status:"success",data:{tour:a}})})},updateTour=function(s,t){if(1*s.params.id>tours.length)return t.status(404).json({status:"fail",message:"Invalid ID"});t.status(200).json({status:"success",data:{tour:"<Updated tour here>"}})},deleteTour=function(s,t){if(1*s.params.id>tours.length)return t.status(404).json({status:"fail",message:"Invalid ID"});t.status(200).json({status:"success",data:null})};app.route("/api/v1/tours").get(getAllTours).post(createTour),app.route("/api/v1/tours:id").get(getTour).patch(updateTour).delete(deleteTour);var port=process.env.port||3e3;app.listen(port,function(){console.log("App running on port ".concat(port,"... ðŸ˜Š"))});